{"version":3,"sources":["webpack:///./src/components/ProjectSection.js","webpack:///./src/pages/projects.js"],"names":["ProjectSection","props","project","projectImagesPath","process","animateIn","animateOnce","alignment","className","to","projectPath","src","displayImage","alt","name","subtitle","technologies","map","tech","index","Fragment","key","roles","role","Projects","projects","data","useContext","ProjectsContext","Layout","title","textToType"],"mappings":"2KAuGeA,EAlGQ,SAAAC,GACrB,IAAMC,EAAUD,EAAMC,QAEhBC,EAAuBC,2FAC7B,OACE,kBAAC,IAAD,CAAiBC,UAAU,SAASC,aAAa,GAC1B,SAApBL,EAAMM,UACL,6BAASC,UAAU,uEACjB,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAMC,GAAE,aAAeP,EAAQQ,aAC7B,yBAAKC,IAAG,GAAKR,EAAoBD,EAAQU,aAAgBC,IAAI,OAGjE,yBAAKL,UAAU,cACb,4BAAKN,EAAQY,MACb,wBAAIN,UAAU,YAAYN,EAAQa,UAClC,2BACGb,EAAQc,aAAaC,KAAI,SAACC,EAAMC,GAC/B,OACE,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GAClB,IACD,gCAAYD,EAAZ,WAKR,wBAAIV,UAAU,aAAd,aACA,wBAAIA,UAAU,aACXN,EAAQoB,MAAML,KAAI,SAACM,EAAMJ,GACxB,OACE,wBAAIE,IAAKF,GACP,2BAAII,QAKZ,kBAAC,OAAD,CACEf,UAAU,kBACVC,GAAE,aAAeP,EAAQQ,aAEzB,wBAAIF,UAAU,IAAd,gBACe,uBAAGA,UAAU,oCAMlC,6BAASA,UAAU,uEACjB,yBAAKA,UAAU,cACb,4BAAKN,EAAQY,MACb,wBAAIN,UAAU,YAAYN,EAAQa,UAClC,2BACGb,EAAQc,aAAaC,KAAI,SAAAC,GACxB,OACE,kBAAC,IAAME,SAAP,KACE,gCACG,IACGF,EAFN,WAQR,wBAAIV,UAAU,aAAd,aACA,wBAAIA,UAAU,aACXN,EAAQoB,MAAML,KAAI,SAAAM,GACjB,OACE,4BACE,2BAAIA,QAKZ,kBAAC,OAAD,CACEf,UAAU,kBACVC,GAAE,aAAeP,EAAQQ,aAEzB,wBAAIF,UAAU,IAAd,gBACe,uBAAGA,UAAU,mCAIhC,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAMC,GAAE,aAAeP,EAAQQ,aAC5BR,EAAQU,aACP,yBACED,IAAG,GAAKR,EAAoBD,EAAQU,aACpCC,IAAI,KAEJ,U,sBCpDHW,UAlCE,SAAAvB,GACf,IACIwB,EADEC,EAAOC,qBAAWC,KAMxB,OAJIF,IACFD,EAAWC,EAAKD,UAIhB,kBAACI,EAAA,EAAD,CAAQC,MAAM,WAAWC,WAAW,iBACjCN,EACGA,EAASR,KAAI,SAACf,EAASiB,GACrB,OAAIA,EAAQ,GAAM,EAEd,kBAAC,EAAD,CACEE,IAAKF,EACLjB,QAASA,EACTK,UAAU,SAKZ,kBAAC,EAAD,CACEc,IAAKF,EACLjB,QAASA,EACTK,UAAU,aAKlB","file":"component---src-pages-projects-js-5ce68654c3d3cb28d6ba.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport ScrollAnimation from \"react-animate-on-scroll\"\r\n\r\nconst ProjectSection = props => {\r\n  const project = props.project\r\n\r\n  const projectImagesPath = `${process.env.GATSBY_URL}/images/projects/`\r\n  return (\r\n    <ScrollAnimation animateIn=\"fadeIn\" animateOnce={true}>\r\n      {props.alignment === \"left\" ? (\r\n        <section className=\"padding-x-large padding-y-medium flex projects cases show-on-scroll\">\r\n          <div className=\"cases-image\">\r\n            <Link to={`/projects/${project.projectPath}`}>\r\n              <img src={`${projectImagesPath}${project.displayImage}`} alt=\"\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"cases-info\">\r\n            <h2>{project.name}</h2>\r\n            <h4 className=\"subtitle\">{project.subtitle}</h4>\r\n            <p>\r\n              {project.technologies.map((tech, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    {\"#\"}\r\n                    <strong>{`${tech}, `}</strong>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </p>\r\n            <h6 className=\"text-dark\">My roles:</h6>\r\n            <ul className=\"text-dark\">\r\n              {project.roles.map((role, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    <p>{role}</p>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <Link\r\n              className=\"gradient-button\"\r\n              to={`/projects/${project.projectPath}`}\r\n            >\r\n              <h4 className=\"\">\r\n                view project <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n              </h4>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <section className=\"padding-x-large padding-y-medium flex projects cases show-on-scroll\">\r\n          <div className=\"cases-info\">\r\n            <h2>{project.name}</h2>\r\n            <h4 className=\"subtitle\">{project.subtitle}</h4>\r\n            <p>\r\n              {project.technologies.map(tech => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <strong>\r\n                      {\"#\"}\r\n                      {`${tech}, `}\r\n                    </strong>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </p>\r\n            <h6 className=\"text-dark\">My roles:</h6>\r\n            <ul className=\"text-dark\">\r\n              {project.roles.map(role => {\r\n                return (\r\n                  <li>\r\n                    <p>{role}</p>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <Link\r\n              className=\"gradient-button\"\r\n              to={`/projects/${project.projectPath}`}\r\n            >\r\n              <h4 className=\"\">\r\n                view project <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n              </h4>\r\n            </Link>\r\n          </div>\r\n          <div className=\"cases-image\">\r\n            <Link to={`/projects/${project.projectPath}`}>\r\n              {project.displayImage ? (\r\n                <img\r\n                  src={`${projectImagesPath}${project.displayImage}`}\r\n                  alt=\"\"\r\n                />\r\n              ) : null}\r\n            </Link>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </ScrollAnimation>\r\n  )\r\n}\r\n\r\nexport default ProjectSection\r\n","import React, { useContext } from \"react\"\r\nimport { ProjectsContext } from \"../ProjectsContext\"\r\n\r\nimport ProjectSection from \"../components/ProjectSection\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nimport \"../styles/main.scss\"\r\n\r\nconst Projects = props => {\r\n  const data = useContext(ProjectsContext)\r\n  let projects\r\n  if (data) {\r\n    projects = data.projects\r\n  }\r\n\r\n  return (\r\n    <Layout title=\"Projects\" textToType=\"< Projects />\">\r\n      {projects\r\n        ? projects.map((project, index) => {\r\n            if (index % 2 === 0) {\r\n              return (\r\n                <ProjectSection\r\n                  key={index}\r\n                  project={project}\r\n                  alignment=\"left\"\r\n                ></ProjectSection>\r\n              )\r\n            } else {\r\n              return (\r\n                <ProjectSection\r\n                  key={index}\r\n                  project={project}\r\n                  alignment=\"right\"\r\n                ></ProjectSection>\r\n              )\r\n            }\r\n          })\r\n        : null}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}
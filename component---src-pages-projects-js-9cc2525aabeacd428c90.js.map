{"version":3,"sources":["webpack:///./src/components/ProjectSection.js","webpack:///./src/pages/projects.js"],"names":["ProjectSection","props","project","animateIn","animateOnce","alignment","className","to","projectPath","src","displayImage","alt","name","subtitle","technologies","map","tech","index","Fragment","key","roles","role","Projects","projects","useContext","ProjectsContext","Layout","title","textToType"],"mappings":"2KAuGeA,EAlGQ,SAAAC,GACrB,IAAMC,EAAUD,EAAMC,QAGtB,OACE,kBAAC,IAAD,CAAiBC,UAAU,SAASC,aAAa,GAC1B,SAApBH,EAAMI,UACL,6BAASC,UAAU,uEACjB,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAMC,GAAE,aAAeL,EAAQM,aAC7B,yBAAKC,IAPS,sBAOmBP,EAAQQ,aAAgBC,IAAI,OAGjE,yBAAKL,UAAU,cACb,4BAAKJ,EAAQU,MACb,wBAAIN,UAAU,YAAYJ,EAAQW,UAClC,2BACGX,EAAQY,aAAaC,KAAI,SAACC,EAAMC,GAC/B,OACE,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GAClB,IACD,gCAAYD,EAAZ,WAKR,wBAAIV,UAAU,aAAd,aACA,wBAAIA,UAAU,aACXJ,EAAQkB,MAAML,KAAI,SAACM,EAAMJ,GACxB,OACE,wBAAIE,IAAKF,GACP,2BAAII,QAKZ,kBAAC,OAAD,CACEf,UAAU,kBACVC,GAAE,aAAeL,EAAQM,aAEzB,wBAAIF,UAAU,IAAd,gBACe,uBAAGA,UAAU,oCAMlC,6BAASA,UAAU,uEACjB,yBAAKA,UAAU,cACb,4BAAKJ,EAAQU,MACb,wBAAIN,UAAU,YAAYJ,EAAQW,UAClC,2BACGX,EAAQY,aAAaC,KAAI,SAAAC,GACxB,OACE,kBAAC,IAAME,SAAP,KACE,gCACG,IACGF,EAFN,WAQR,wBAAIV,UAAU,aAAd,aACA,wBAAIA,UAAU,aACXJ,EAAQkB,MAAML,KAAI,SAAAM,GACjB,OACE,4BACE,2BAAIA,QAKZ,kBAAC,OAAD,CACEf,UAAU,kBACVC,GAAE,aAAeL,EAAQM,aAEzB,wBAAIF,UAAU,IAAd,gBACe,uBAAGA,UAAU,mCAIhC,yBAAKA,UAAU,eACb,kBAAC,OAAD,CAAMC,GAAE,aAAeL,EAAQM,aAC5BN,EAAQQ,aACP,yBACED,IAnFU,sBAmFkBP,EAAQQ,aACpCC,IAAI,KAEJ,U,sBCzDHW,UA7BE,SAAArB,GACf,IACMsB,EADOC,qBAAWC,KACFF,SAEtB,OACE,kBAACG,EAAA,EAAD,CAAQC,MAAM,WAAWC,WAAW,iBACjCL,EAASR,KAAI,SAACb,EAASe,GACtB,OAAIA,EAAQ,GAAM,EAEd,kBAAC,EAAD,CACEE,IAAKF,EACLf,QAASA,EACTG,UAAU,SAKZ,kBAAC,EAAD,CACEc,IAAKF,EACLf,QAASA,EACTG,UAAU","file":"component---src-pages-projects-js-9cc2525aabeacd428c90.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport ScrollAnimation from \"react-animate-on-scroll\"\r\n\r\nconst ProjectSection = props => {\r\n  const project = props.project\r\n\r\n  const projectImagesPath = \"../images/projects/\"\r\n  return (\r\n    <ScrollAnimation animateIn=\"fadeIn\" animateOnce={true}>\r\n      {props.alignment === \"left\" ? (\r\n        <section className=\"padding-x-large padding-y-medium flex projects cases show-on-scroll\">\r\n          <div className=\"cases-image\">\r\n            <Link to={`/projects/${project.projectPath}`}>\r\n              <img src={`${projectImagesPath}${project.displayImage}`} alt=\"\" />\r\n            </Link>\r\n          </div>\r\n          <div className=\"cases-info\">\r\n            <h2>{project.name}</h2>\r\n            <h4 className=\"subtitle\">{project.subtitle}</h4>\r\n            <p>\r\n              {project.technologies.map((tech, index) => {\r\n                return (\r\n                  <React.Fragment key={index}>\r\n                    {\"#\"}\r\n                    <strong>{`${tech}, `}</strong>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </p>\r\n            <h6 className=\"text-dark\">My roles:</h6>\r\n            <ul className=\"text-dark\">\r\n              {project.roles.map((role, index) => {\r\n                return (\r\n                  <li key={index}>\r\n                    <p>{role}</p>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <Link\r\n              className=\"gradient-button\"\r\n              to={`/projects/${project.projectPath}`}\r\n            >\r\n              <h4 className=\"\">\r\n                view project <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n              </h4>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n      ) : (\r\n        <section className=\"padding-x-large padding-y-medium flex projects cases show-on-scroll\">\r\n          <div className=\"cases-info\">\r\n            <h2>{project.name}</h2>\r\n            <h4 className=\"subtitle\">{project.subtitle}</h4>\r\n            <p>\r\n              {project.technologies.map(tech => {\r\n                return (\r\n                  <React.Fragment>\r\n                    <strong>\r\n                      {\"#\"}\r\n                      {`${tech}, `}\r\n                    </strong>\r\n                  </React.Fragment>\r\n                )\r\n              })}\r\n            </p>\r\n            <h6 className=\"text-dark\">My roles:</h6>\r\n            <ul className=\"text-dark\">\r\n              {project.roles.map(role => {\r\n                return (\r\n                  <li>\r\n                    <p>{role}</p>\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n            <Link\r\n              className=\"gradient-button\"\r\n              to={`/projects/${project.projectPath}`}\r\n            >\r\n              <h4 className=\"\">\r\n                view project <i className=\"fas fa-long-arrow-alt-right\"></i>\r\n              </h4>\r\n            </Link>\r\n          </div>\r\n          <div className=\"cases-image\">\r\n            <Link to={`/projects/${project.projectPath}`}>\r\n              {project.displayImage ? (\r\n                <img\r\n                  src={`${projectImagesPath}${project.displayImage}`}\r\n                  alt=\"\"\r\n                />\r\n              ) : null}\r\n            </Link>\r\n          </div>\r\n        </section>\r\n      )}\r\n    </ScrollAnimation>\r\n  )\r\n}\r\n\r\nexport default ProjectSection\r\n","import React, { useContext } from \"react\"\r\nimport { ProjectsContext } from \"../ProjectsContext\"\r\n\r\nimport ProjectSection from \"../components/ProjectSection\"\r\nimport Layout from \"../components/Layout\"\r\n\r\nimport \"../styles/main.scss\"\r\n\r\nconst Projects = props => {\r\n  const data = useContext(ProjectsContext)\r\n  const projects = data.projects\r\n\r\n  return (\r\n    <Layout title=\"Projects\" textToType=\"< Projects />\">\r\n      {projects.map((project, index) => {\r\n        if (index % 2 === 0) {\r\n          return (\r\n            <ProjectSection\r\n              key={index}\r\n              project={project}\r\n              alignment=\"left\"\r\n            ></ProjectSection>\r\n          )\r\n        } else {\r\n          return (\r\n            <ProjectSection\r\n              key={index}\r\n              project={project}\r\n              alignment=\"right\"\r\n            ></ProjectSection>\r\n          )\r\n        }\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n"],"sourceRoot":""}